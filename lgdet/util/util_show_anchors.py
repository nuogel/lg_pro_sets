import numpy as np
import cv2

# img = cv2.imread('person.png') * 0 + 255

anchors16 = [[4.9, 12.533333333333333],  # the average iou is:0.7764558498530564
             [10.15, 8.703703703703702],
             [6.6499999999999995, 14.274074074074074],
             [6.6499999999999995, 18.8],
             [8.75, 16.362962962962964],
             [8.4, 22.977777777777778],
             [16.1, 14.622222222222222],
             [24.5, 11.14074074074074],
             [12.25, 29.592592592592595],
             [15.399999999999999, 41.77777777777778],
             [32.9, 21.933333333333334],
             [23.45, 58.14074074074074],
             [31.5, 84.25185185185185],
             [67.9, 42.474074074074075],
             [51.45, 127.42222222222223],
             [101.14999999999999, 197.05185185185184]]

apollo_anchors = [[4.9434993, 1.516986], [2.1259836, 1.6779645], [19.452609, 17.815241],
                  [3.1458852, 2.4994355], [15.0302664, 2.3736405], [1.2374577, 2.8255595],
                  [5.5330938, 3.605915], [2.4232311, 0.8086055], [0.3672315, 0.6450615],
                  [1.3549788, 1.2046775], [0.9085392, 0.726555], [0.772209, 2.031382],
                  [4.0958478, 9.108235], [0.5070438, 1.26041], [10.0207692, 6.877788],
                  [1.9708173, 4.677844]]

anchors12 = [[5.95, 13.925925925925926],  # average iou:0.75
             [9.8, 9.4],
             [7.35, 17.755555555555556],
             [8.4, 22.977777777777778],
             [18.900000000000002, 13.229629629629631],
             [12.6, 29.940740740740743],
             [15.75, 42.474074074074075],
             [39.2, 25.066666666666666],
             [23.45, 58.14074074074074],
             [31.849999999999998, 83.55555555555556],
             [55.3, 118.02222222222223],
             [100.45, 198.79259259259257]]

anchors9 = [[5.6, 13.577777777777776],
            [7.35, 17.05925925925926],
            [15.05, 10.792592592592593],
            [9.1, 24.02222222222222],
            [14.35, 36.20740740740741],
            [30.45, 20.192592592592593],
            [26.25, 66.84444444444445],
            [62.300000000000004, 40.03703703703704],
            [64.05, 143.43703703703704]]
# the average iou is:
# 0.7143684866680754


apollo_anchors_2_vga = [[4.9434993, 1.516986], [2.1259836, 1.6779645], [19.452609, 17.815241],
                        [3.1458852, 2.4994355], [15.0302664, 2.3736405], [1.2374577, 2.8255595],
                        [5.5330938, 3.605915], [2.4232311, 0.8086055], [0.3672315, 0.6450615],
                        [1.3549788, 1.2046775], [0.9085392, 0.726555], [0.772209, 2.031382],
                        [4.0958478, 9.108235], [0.5070438, 1.26041], [10.0207692, 6.877788],
                        [1.9708173, 4.677844]]

# img = cv2.resize(img, (1672, 876))

tiny_yolo_anchors = [[10, 14], [23, 27], [37, 58], [81, 82], [135, 169], [344, 319]]

visdrone_anchors = [[8., 11.],
                    [15., 23.],
                    [31., 20.],
                    [27., 43.],
                    [57., 41.],
                    [104., 92.],
                    ]

# for i in range(len(tiny_yolo_anchors)):
#     img = cv2.rectangle(img, (800, 5), (800 + int(tiny_yolo_anchors[i][0]), 5 + int(tiny_yolo_anchors[i][1])), (255, 0, 0))
#
#
#
# for i in range(16):
#     img = cv2.rectangle(img, (400, 5), (400 + int(anchors16[i][0]), 5 + int(anchors16[i][1])), (255, 0, 0))
#     img = cv2.rectangle(img, (600, 5),
#                         (600 + int(apollo_anchors[i][0] / 64 * 672), 5 + int(apollo_anchors[i][1] / 24 * 376)),
#                         (255, 0, 0))
#     img = cv2.rectangle(img, (100, 1), (100 + 672, 376), (0, 0, 220))
#
# for i in range(12):
#     img = cv2.rectangle(img, (200, 5), (200 + int(anchors12[i][0]), 5 + int(anchors12[i][1])), (255, 0, 0))
#
# for i in range(9):
#     img = cv2.rectangle(img, (100, 5), (100 + int(anchors9[i][0]), 5 + int(anchors9[i][1])), (255, 0, 0))

print('anchors16')
for i in range(16):
    print('[', '%.7f' % (anchors16[i][0] / 16), ',', '%.7f' % (anchors16[i][1] / 16), '],')
print('anchors12')
for i in range(12):
    print('[', '%.7f' % (anchors12[i][0] / 16), ',', '%.7f' % (anchors12[i][1] / 16), '],')
print('anchors9')
for i in range(9):
    print('[', '%.7f' % (anchors9[i][0] / 16), ',', '%.7f' % (anchors9[i][1] / 16), '],')

print('apollo_anchors')
for i in range(16):
    print('[', '%.7f' % (apollo_anchors[i][0] / 64), ',', '%.7f' % (apollo_anchors[i][1] / 24), '],')

print('tiny_yolo_anchors')
for i in range(len(tiny_yolo_anchors)):
    print('[', '%.7f' % (tiny_yolo_anchors[i][0] / 416), ',', '%.7f' % (tiny_yolo_anchors[i][1] / 416), '],')

print('visdrone_anchors')
for i in range(len(visdrone_anchors)):
    print('[', '%.7f' % (visdrone_anchors[i][0] / 1920), ',', '%.7f' % (visdrone_anchors[i][1] / 1080), '],')


# cv2.imshow('img', img)
# cv2.waitKey()

##########################################
# anchors16
# [ 0.3062500 , 0.7833333 ],
# [ 0.6343750 , 0.5439815 ],
# [ 0.4156250 , 0.8921296 ],
# [ 0.4156250 , 1.1750000 ],
# [ 0.5468750 , 1.0226852 ],
# [ 0.5250000 , 1.4361111 ],
# [ 1.0062500 , 0.9138889 ],
# [ 1.5312500 , 0.6962963 ],
# [ 0.7656250 , 1.8495370 ],
# [ 0.9625000 , 2.6111111 ],
# [ 2.0562500 , 1.3708333 ],
# [ 1.4656250 , 3.6337963 ],
# [ 1.9687500 , 5.2657407 ],
# [ 4.2437500 , 2.6546296 ],
# [ 3.2156250 , 7.9638889 ],
# [ 6.3218750 , 12.3157407 ],
# anchors12
# [ 0.3718750 , 0.8703704 ],
# [ 0.6125000 , 0.5875000 ],
# [ 0.4593750 , 1.1097222 ],
# [ 0.5250000 , 1.4361111 ],
# [ 1.1812500 , 0.8268519 ],
# [ 0.7875000 , 1.8712963 ],
# [ 0.9843750 , 2.6546296 ],
# [ 2.4500000 , 1.5666667 ],
# [ 1.4656250 , 3.6337963 ],
# [ 1.9906250 , 5.2222222 ],
# [ 3.4562500 , 7.3763889 ],
# [ 6.2781250 , 12.4245370 ],
# anchors9
# [ 0.3500000 , 0.8486111 ],
# [ 0.4593750 , 1.0662037 ],
# [ 0.9406250 , 0.6745370 ],
# [ 0.5687500 , 1.5013889 ],
# [ 0.8968750 , 2.2629630 ],
# [ 1.9031250 , 1.2620370 ],
# [ 1.6406250 , 4.1777778 ],
# [ 3.8937500 , 2.5023148 ],
# [ 4.0031250 , 8.9648148 ],


#  ANCHORS: [[ 0.30625 , 0.7833333333333333 ],
#            [ 0.634375 , 0.5439814814814814 ],
#            [ 0.41562499999999997 , 0.8921296296296296 ],
#            [ 0.41562499999999997 , 1.175 ],
#            [ 0.546875 , 1.0226851851851853 ],
#            [ 0.525 , 1.4361111111111111 ],
#            [ 1.00625 , 0.9138888888888889 ],
#            [ 1.53125 , 0.6962962962962963 ],
#            [ 0.765625 , 1.8495370370370372 ],
#            [ 0.9624999999999999 , 2.611111111111111 ],
#            [ 2.05625 , 1.3708333333333333 ],
#            [ 1.465625 , 3.633796296296296 ],
#            [ 1.96875 , 5.265740740740741 ],
#            [ 4.24375 , 2.6546296296296297 ],
#            [ 3.215625 , 7.9638888888888895 ],
#            [ 6.3218749999999995 , 12.31574074074074 ]] #anchors = 16

#  ANCHORS FOR RAW APOLLO:
#  ANCHORS: [[4.9434993, 1.516986], [2.1259836, 1.6779645], [19.452609, 17.815241],
#            [3.1458852, 2.4994355], [15.0302664, 2.3736405], [1.2374577, 2.8255595],
#            [5.5330938, 3.605915], [2.4232311, 0.8086055], [0.3672315, 0.6450615],
#            [1.3549788, 1.2046775], [0.9085392, 0.726555], [0.772209, 2.031382],
#            [4.0958478, 9.108235], [0.5070438, 1.26041], [10.0207692, 6.877788],
#            [1.9708173, 4.677844]]  # anchors = raw_boxes / img_size * feature map size.
# goldenridge 50k k-means ===anchors=16
# [ 0.30625 , 0.7833333333333333 ],
# [ 0.634375 , 0.5439814814814814 ],
# [ 0.41562499999999997 , 0.8921296296296296 ],
# [ 0.41562499999999997 , 1.175 ],
# [ 0.546875 , 1.0226851851851853 ],
# [ 0.525 , 1.4361111111111111 ],
# [ 1.00625 , 0.9138888888888889 ],
# [ 1.53125 , 0.6962962962962963 ],
# [ 0.765625 , 1.8495370370370372 ],
# [ 0.9624999999999999 , 2.611111111111111 ],
# [ 2.05625 , 1.3708333333333333 ],
# [ 1.465625 , 3.633796296296296 ],
# [ 1.96875 , 5.265740740740741 ],
# [ 4.24375 , 2.6546296296296297 ],
# [ 3.215625 , 7.9638888888888895 ],
# [ 6.3218749999999995 , 12.31574074074074 ],

# goldenridge 50k k-means ===anchors=12
# [ 0.371875 , 0.8703703703703703 ],
# [ 0.6125 , 0.5875 ],
# [ 0.459375 , 1.1097222222222223 ],
# [ 0.525 , 1.4361111111111111 ],
# [ 1.1812500000000001 , 0.826851851851852 ],
# [ 0.7875 , 1.8712962962962965 ],
# [ 0.984375 , 2.6546296296296297 ],
# [ 2.45 , 1.5666666666666667 ],
# [ 1.465625 , 3.633796296296296 ],
# [ 1.9906249999999999 , 5.222222222222222 ],
# [ 3.45625 , 7.376388888888889 ],
# [ 6.278125 , 12.424537037037036 ],

##goldenridge 50k k-means ===anchors=9
# [ 0.35 , 0.848611111111111 ],
# [ 0.459375 , 1.0662037037037038 ],
# [ 0.940625 , 0.674537037037037 ],
# [ 0.56875 , 1.5013888888888887 ],
# [ 0.896875 , 2.262962962962963 ],
# [ 1.903125 , 1.262037037037037 ],
# [ 1.640625 , 4.177777777777778 ],
# [ 3.8937500000000003 , 2.502314814814815 ],
# [ 4.003125 , 8.964814814814815 ],
